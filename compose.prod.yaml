services:
  redis:
    image: redis:alpine
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - adneura_network

  celery_worker:
    build:
      context: ./adneura-api
      dockerfile: Dockerfile.prod
    container_name: celery-worker
    command: celery -A config worker --loglevel=info
    volumes:
      - adneura-images:/app/images
    depends_on:
      - backend
      - redis
    env_file:
      - .env
    networks:
      - adneura_network

  backend:
    build:
      context: ./adneura-api
      dockerfile: Dockerfile.prod
    container_name: django-backend
    restart: always
    volumes:
      - adneura-images:/app/images
    ports:
      - "${DJANGO_PORT}:8000"
    env_file:
      - .env
    networks:
      - adneura_network

  frontend:
    build:
      context: ./adneura-front
      dockerfile: Dockerfile.prod
      args:
        VITE_BACKEND_DOMAIN: ${VITE_BACKEND_DOMAIN}
        VITE_BACKEND: ${VITE_BACKEND}
    container_name: vite-frontend
    restart: always
    depends_on:
      - backend
    networks:
      - adneura_network
    labels:
      - traefik.enable=true
      - traefik.http.routers.front.rule=Host(`adneura.gravta.com`)
      - traefik.http.routers.front.entrypoints=web
      - traefik.http.services.front.loadbalancer.server.port=8080

networks:
  adneura_network:
    driver: bridge

volumes:
  adneura-images:
    driver: local
