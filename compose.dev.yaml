services:
  db:
    image: postgres:latest
    container_name: postgres-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    networks:
      - adneura_network

  redis:
    image: redis:alpine
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - adneura_network

  backend:
    build:
      context: ./adneura-api
      dockerfile: Dockerfile.dev
    container_name: django-backend
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./adneura-api:/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
    networks:
      - adneura_network

  celery_worker:
    build:
      context: ./adneura-api
      dockerfile: Dockerfile.dev # Usamos o mesmo Dockerfile do backend
    container_name: celery-worker
    command: celery -A config worker --loglevel=info
    volumes:
      - ./adneura-api:/app
    depends_on:
      - backend
      - redis
    env_file:
      - .env
    networks:
      - adneura_network

  frontend:
    build:
      context: ./adneura-front
      dockerfile: Dockerfile.dev
    container_name: vite-frontend
    command: npm run dev
    volumes:
      - ./adneura-front:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    env_file:
      - .env
    networks:
      - adneura_network

volumes:
  postgres_data:

networks:
  adneura_network:
    driver: bridge
